--------------------------------------------------------------------------------------------------------------
Linux
--------------------------------------------------------------------------------------------------------------
14-05-25 - class 1
--------------------------------------------------------------------------------------------------------------
Linux Commands

Creating Files and Directories

touch <file-name> --> TO create a file
mkdir <directory-name> --> To create a directory
--------------------------------------------------------------------------------------------------------------
Listing Files and Directories

ls --> To list all the files and directories in the present working directory
ls -l --> To list all files and directories in long format
ls -lt --> To sort the files and directories by their modified time
ls -lrt --> TO sort by modified time in reverse order
--------------------------------------------------------------------------------------------------------------
The check the current Directory

pwd --> Print Working Directory
--------------------------------------------------------------------------------------------------------------
Change Directory

cd <directory-name> --> To change or get inside a directory
cd .. --> To go back to one previous directory
cd --> To goto home path [/home/ec2-user]
--------------------------------------------------------------------------------------------------------------
For MAC:

cd --> To goto Home Path
cd Downloads --> To goto Download Folder
chmod 400 "may2025.pem" --> To change the permssions of the pem file
ssh -i "may2025.pem" ec2-user@ec2-15-206-145-107.ap-south-1.compute.amazonaws.com --> To connect to the server
--------------------------------------------------------------------------------------------------------------
VI - Text Editor

vi <file-name> --> To open a file to make changes

Note: VI Editor always opens in command mode

i --> To goto insert mode
esc --> To goto command mode

esc + :w --> To save the file
esc + :q --> To quit from the file
esc + :wq --> To save and quit from the file
esc + :q! --> To quit from the file forcefully [Useful when changes made to the file are not required]

w - Write
q - Quit
! - Override
--------------------------------------------------------------------------------------------------------------
cat <file-name> --> To see the contents of the file
cat -n <file-name> --> To show the contents of the file along with reference numbers
--------------------------------------------------------------------------------------------------------------
To set Reference Numbers:

esc + :set nu --> To set the reference numbers in vi editor
esc + :set nonu --> To remove the reference numbers
--------------------------------------------------------------------------------------------------------------
Find and Replace Strings:

esc + :%s/<old-pattern>/<new-pattern>/ig --> To find and replace strings on all lines with case insensitive

% -- All Lines
s -- Substitute
i -- Ignore Casing
g -- Globally (i.e All the instances of the word in the line)

esc + :4s/<old-pattern>/<new-pattern>/g --> To find and replace only on the 4th line
esc + :4,6s/<old-pattern>/<new-pattern>/g --> To find and replace from line 4 to 6
esc + :4,$s/<old-pattern>/<new-pattern>/g --> To find and replace from line 4 to end of the file
--------------------------------------------------------------------------------------------------------------
To search for Strings/Patterns

esc + /<pattern> --> To search for a string in VI Editor 
esc + /\c<pattern> --> To search by ignoring the case

n - To goto next occurence of the string
shift + n - To goto previous occurence of the string
--------------------------------------------------------------------------------------------------------------
To Delete Lines:

esc + dd --> To delete a line where the cursor is located
esc + 4dd --> TO delete 4 lines for the cursor location

esc + :4d --> To delete the 4th line of the file
esc + :4,6d --> TO delete from line 4 to 6
esc + :4,$d --> To delete from line 4 to end of the file
--------------------------------------------------------------------------------------------------------------
esc + :undo --> To undo the changes
esc + :redo --> To redo the changes
--------------------------------------------------------------------------------------------------------------
Assignmet:
Search for a command to display the contents of the file in reverse order 
--------------------------------------------------------------------------------------------------------------
Head - Used to print the required number of lines from the begining of the file

head -<n> <file-name> --> To print n number of lines from the begining of the file
head -4 <file-name> --> To print the first 4 lines of the file
head <file-name> --> To print the first 10 lines of the file 
--------------------------------------------------------------------------------------------------------------
Tail - Used to print the required number of lines from the end of the file

tail -<n> <file-name> --> To print n number of lines from the end of the file
tail -4 <file-name> --> To print the last 4 lines of the file
tail <file-name> --> To print the last 10 lines of the file
--------------------------------------------------------------------------------------------------------------
Less - Used to view contents of the files interactively

less <file-name> --> View contents of the file

f - To go one page forward
b - To go one page backward
q - Quit from less command

/<string> --> To search for a string

less -N <file-name> --> To view the contents of the file with reference numbers
--------------------------------------------------------------------------------------------------------------
Man Pages and Help

man <command> --> man stands Manual. It displays the Manual Page of the command, which includes all the details of the command
<command> --help --> To get a brief summary of the command
--------------------------------------------------------------------------------------------------------------
Copy, Move and Remove

Copy Files and Directories:

cp <original-file-path> <new-file-path> --> To copy a file in linux
cp -r <original-directory-path> <new-directory-path> --> To copy a directory in linux

cp <original-file-path> <directory-path>/ --> To copy a file in linux to a particular directory path with the same file name
cp <original-file-path> <directory-path>/<new-file-name> --> To copy a file in linux to a particular directory path with the new file name
--------------------------------------------------------------------------------------------------------------
Move Files and Directories:

mv <original-file-path> <new-file-path> --> To rename a file in linux
mv <original-directory-path> <new-directory-path> --> To rename a directory in linux

mv <original-file-path> <directory-path>/ --> To move a file in linux to a particular directory path with the same file name
mv <original-file-path> <directory-path>/<new-file-name> --> To move a file in linux to a particular directory path with the new file name
--------------------------------------------------------------------------------------------------------------
Remove Files and Directories

rm <file-name> --> To delete a file in linux
rm -r <directory-name> --> To delete a directory in linux

rm file* --> To delete all the files that start with the name file
rm *.sh --> To delete all the files that end with .sh
rm *unit* --> To delete all the files that have unit in the middle
--------------------------------------------------------------------------------------------------------------
Echo -- Print

echo "<strings>" --> To print text on the terminal

Example:

echo "hello" --> To print hello on the terminal

echo -e "hello \nHow are you" --> To print the text in new lines using \n escaped backslash character
--------------------------------------------------------------------------------------------------------------
Redirect [>] and Append [>>]

command > <file-name> --> To redirect the standard output of a command to a file

Example:

echo "hello" > red1.txt --> To store the output of the echo command to the file red1.txt

command >> <file-name> --> To append the output of a command to a file

echo "How are you" >> red1.txt --> To store the additional output of the echo command to the same file red1.txt
--------------------------------------------------------------------------------------------------------------
Pipe [|] - To pass the stanard output of a command to the next command

<command1> | <command2> --> To pass the output of command 1 to command 2

Example:

head -3 <file-name> | tail -1 --> To print the 3rd line of the file
head -3 <file-name> | wc -w --> To find the number of words in the first 3 lines of the file
--------------------------------------------------------------------------------------------------------------
Word Count [wc]

wc <file-name> --> To check the total number of lines, words and characters present in the file

wc -l <file-name> --> To print the total number of lines present in the file
wc -w <file-name> --> To print the total number of words present in the file
wc -c <file-name> --> To print the total number of characters present in the file
--------------------------------------------------------------------------------------------------------------
grep -- Used to search for strings/patterns inside the file

grep "<string>" <file-name> --> To print all the lines with the matching string

grep -i "<string>" <file-name> --> To print all the lines with the matching string and case is ignored

grep -n "<string>" <file-name> --> To print all the lines with the matching string along with reference line numbers

grep -e "<string1>" -e "<string2>" <file-name> --> To search for multiple strings inside the file

grep -lR "<string>" --> To print all the file names that have the matching string

grep -c "<string>" <file-name> --> To print count of number of lines with the matching string

grep -v "<string>" <file-name> --> To print all the lines that do not have the matching string

grep "^<string>" <file-name> --> To print all the lines with the matching string at the beginning of the line
grep "<string>$" <file-name> --> To print all the lines with the matching string at the end of the line
--------------------------------------------------------------------------------------------------------------
Find -- To search for files and directories

find -name <file/dir-name> --> To search for files and directories by their name

find -iname <file/dir-name> --> To search for files and directories by their name with case ignored

find -type f -name <file-name> --> To only search for files
find -type d -name <dir-name> --> To only search for directories

find <path> -name <file/dir-name> --> To search for files and directories inside a particular path

find -mtime -7 --> Find all the files created in the last 7 days
find -mtime +7 --> Find all the files created more than 7 days ago

find -maxdepth 1 <file/dir-name> --> To search for files and directories in the current directory only
--------------------------------------------------------------------------------------------------------------
Assignment:

1. Grep Flag to display all the file names that do not have the string
2. Find all the files that got created in last 1 hour and 30 mins
3. Find all the files that have the size more than 1 MB
4. Find all the files which are empty and delete using find command
--------------------------------------------------------------------------------------------------------------
sed - Stream Editor - Find/Replace, Print, Deleting etc

sed 's/<old-pattern>/<new-pattern>/ig' <file-name> --> To find and replace strings on all lines and also ignoring case [File does not get modified]

sed -i 's/<old-pattern>/<new-pattern>/ig' <file-name> --> To insert the changes to the file with sed command

sed '4s/<old-pattern>/<new-pattern>/g' <file-name> --> To find and replace only on 4th line
sed '4,6s/<old-pattern>/<new-pattern>/g' <file-name> --> To find and replace only from 4th to 6th line
sed '4,$s/<old-pattern>/<new-pattern>/g' <file-name> --> To find and replace only from 4th line to end of the file

sed '4d' <file-name> --> To delete the 4th of the file
sed '4,6d' <file-name> --> To delete from 4th line to 6th line of the file
sed '4,$d' <file-name> --> To delete from 4th line to end of the file
sed '4d;8d' <file-name> --> To delete the 4th and 8th line

sed -n '4p' <file-name> --> To print the 4th of the file
sed -n '4,6p' <file-name> --> To print from 4th line to 6th line of the file
sed -n '4,$p' <file-name> --> To print from 4th line to end of the file
