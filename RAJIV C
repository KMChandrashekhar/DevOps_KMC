DevOps Architect Interview at Atlassian 

Round 1 â€“ Infra, Kubernetes, and Cloud Patterns (45 mins)
â€¢ Design a multi-tenant EKS cluster with isolation across dev, QA, and prod, with no noisy neighbors.
â€¢ Whatâ€™s your approach to managing 10+ Kustomize overlays without drift or duplication?
â€¢ Explain how youâ€™d secure cross-region S3 replication and validate data integrity at scale.
â€¢ What happens when systemd hits a failing unit in a containerized node? How would you auto-recover?
â€¢ Walk through your strategy to detect & mitigate pod-to-pod lateral movement inside a cluster.
â€¢ How do you perform zero-downtime upgrades for a stateful workload using Helm 3?
â€¢ Describe a hybrid cloud routing architecture between GCP and AWS. Where do you enforce boundaries?
â€¢ Your Terraform state got corrupted during a backend migration. Rebuild strategy?
â€¢ Bash One-liner: Find all running containers using more than 500MB RSS memory on a node.

Round 2 â€“ Real Fire, RCA, and Chaos Control (75 mins)
â€¢ A new AWS ALB config caused TLS handshakes to fail intermittently. Walk through your full RCA path.
â€¢ Kubernetes nodes are healthy. But kubectl logs is blank for critical pods. Whatâ€™s happening?
â€¢ You deployed a sidecar logging agent. Suddenly, CPU throttling spikes. Diagnose and rollback.
â€¢ Autoscaling isnâ€™t kicking in despite the CPU crossing the threshold. Whatâ€™s broken â€” metrics, HPA, or API server?
â€¢ Prod users reporting 504s, but ELB health checks are green. Explain your isolation + triage process.
â€¢ Systemd journal logs vanish on reboot across some AMIs. What do you check in the image build and boot sequence?
â€¢ A production pod was OOMKilled, but you canâ€™t find logs. Walk through a forensic-level debug.
â€¢ Kernel panic on a GKE node mid-deploy. How do you identify if itâ€™s infra, base image, or app-level?

Round 3 â€“ Leadership, Engineering Influence & Production Principles (30 mins)
â€¢ How do you design infrastructure that empowers devs without giving them footguns?
â€¢ Whatâ€™s your Linux-level checklist before approving any custom AMI to production?
â€¢ Youâ€™ve been asked to move from centralized logging to a service-mesh-based observability model. Your tradeoffs?
â€¢ Describe how you simulate production-level chaos in staging for Kubernetes.
â€¢ How do you handle pushback from leadership when your SLOs threaten velocity?

ðŸ’¡ TL;DR
If you havenâ€™t:
Debugged a kernel panic in a prod cluster
Recovered from Terraform state corruption mid-deploy
Rolled back a broken Helm upgrade with zero visibility
Built cross-cloud boundaries that enforce security

Then, Atlassian wonâ€™t just test your YAML fluency.
Theyâ€™ll test your judgment under system stress.
