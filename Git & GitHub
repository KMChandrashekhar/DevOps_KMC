Q1. What is Git?
Answer: Git is a distributed version control system (DVCS) that helps
track code changes, collaborate with teams, roll back to older
versions, and manage branching/merging.
ðŸ’¡ Pro Tip: Always mention "distributed" â€” it highlights Gitâ€™s oline
capability.

Q2. What is GitHub?
Answer: GitHub is a cloud platform to host Git repositories and
collaborate using Pull Requests, Issues, Actions (CI/CD), and project
boards.
ðŸ’¡ Pro Tip: Say Git = tool, GitHub = platform.

Q3. Common Git commands?
Answer:
git init â†’ Initialize a new Git repository
git clone <url> â†’ Copy repository from remote to local
git status â†’ Show modified/untracked files
git add . â†’ Stage all changes
git commit -m "msg" â†’ Save a snapshot with a message
git log --oneline â†’ Show commit history in short form
git branch â†’ List branches
git checkout -b <branch> â†’ Create + switch to a new branch
git merge <branch> â†’ Merge branch into current
git push origin main â†’ Push local commits to GitHub
git pull â†’ Fetch + merge changes from remote
git fetch â†’ Only download changes (no merge)
ðŸ’¡ Pro Tip: In interviews, mention git commit -am "msg" as a shortcut
for tracked files.

Q4. Dierence between Git and GitHub?
Answer:
Git â†’ Local VCS tool that manages versions of code.
GitHub â†’ Cloud hosting service that extends Git with collaboration
features.
Interview Edge: Mention alternatives like GitLab, Bitbucket.

Q5. What is a repository?
Answer: A repository is a project directory managed by Git,
containing code, commit history, and branches.
Local repository â†’ Exists on your machine (git init).
Remote repository â†’ Hosted on GitHub for team collaboration.
ðŸ’¡ Pro Tip: Interviewers like when you highlight the dierence
between local and remote repos.

Q6. What is a commit?
Answer: A commit is a snapshot of code at a point in time, identified
by a unique SHA hash, author, timestamp, and commit message.
ðŸ’¡ Pro Tip: A clear commit message helps track why a change was
made.

ðŸ“Œ Section 2: Branching & Merging

Q7. What is a branch?
Answer: A branch is a parallel line of development. It allows
developers to build features without aecting the main branch.
ðŸ’¡ Pro Tip: Mention how feature branches prevent breaking
production code.

Q8. What is a merge conflict? How do you resolve it?
Answer: A merge conflict happens when two branches modify the
same code section. Git cannot decide which change to keep.
Steps:
Open file and check conflict markers.
Decide correct changes (or combine).

3. Save â†’ git add â†’ git commit.
ðŸ’¡ Pro Tip: Mention that handling conflicts quickly is vital in team
projects.

Q9. Dierence between git merge and git rebase?
Answer:
Merge â†’ Combines histories, keeps non-linear commits.
Rebase â†’ Replays commits on another branch, making history
linear.
ðŸ’¡ Pro Tip: Teams often use merge for collaboration, and rebase
for personal branches.

Q10. What is a fast-forward merge?
Answer: A fast-forward merge occurs when no new commits exist on
the target branch, so Git simply moves the branch pointer ahead
without creating a merge commit.
ðŸ’¡ Pro Tip: Fast-forward keeps history simple, but doesnâ€™t show that a
branch existed.

Q11. What is a detached HEAD?
Answer: Detached HEAD occurs when Git points directly to a commit
instead of a branch.
Commits made here wonâ€™t belong to any branch unless you create
one.
ðŸ’¡ Pro Tip: Used for experiments or reviewing older commits.

ðŸ“Œ Section 3: Commands
Q11. Common Git commands?
Answer:
git init â†’ Initialize a new Git repository
git clone <url> â†’ Copy repository from remote to local
git status â†’ Show modified/untracked files
git add . â†’ Stage all changes
git commit -m "msg" â†’ Save a snapshot with a message
git log --oneline â†’ Show commit history in short form
git branch â†’ List branches
git checkout -b <branch> â†’ Create + switch to a new branch
git merge <branch> â†’ Merge branch into current
git push origin main â†’ Push local commits to GitHub
git pull â†’ Fetch + merge changes from remote
git fetch â†’ Only download changes (no merge)
ðŸ’¡ Pro Tip: In interviews, mention git commit -am "msg" as a shortcut
for tracked files.

Q12. What is the dierence between git pull and git fetch?
Answer:
git fetch downloads commits from remote into remote-tracking
branches (like origin/main) but doesnâ€™t merge them.
git pull does fetch + merge, updating your current branch
automatically.




