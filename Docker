DOCKER
“To standardized way to package the application with its dependencies and deploy 
it on any environment.”
• Docker is a tool used to create, deploy,and run applications using containers.
• It makes it easy to deploy and run applications in a repeatable and secure
• Docker allows applications to run on separate machines with the same 
operating system kernel.
• Docker allows developers to create applications that can be quickly and 
easily shipped to different machines with different configuration

Docker is popular due to / advantages of docker
• Low system requirements
• Quick application portability
• Local development environment
• Continous integration and deployment
• Code isolation
• Increased efficiency

The Reason could be due to application not working fine : / why docker
• Dependencies
• Libraries and versions
• Framework
• OS Level features
• Microservices

DOCKER LIFE CYCLE
“Docker goes through complete life cycle from creation to deletion state”
1. Create: 1st stage is a creation of docker image .It can build from pull image 
from docker registry or by writing ‘Dockerfile’
2. Run: Running of docker container.It contains ports,volumes,environmental 
variables
3. Manage:After running container ,It is managed by various commands like 
docker ps ,docker start,docker stop,docker restart,etc
4. Update: Docker containers are updated by configuration,dependencies and 
restarting 
5. Backup: Docker containers are backup by creating snapshots of filesystem 
& metadata by the tools are docker volume and docker images
6. Restore:Docker containers are restored by images or container filesystem & 
metadata.
7. Delete: Final stage is deletion of container by command ‘docker rm 
containername

DOCKER ARCHITECTURE
• Docker Daemon: *It runs on host OS & resposible for running containers to 
manage docker service,
 * It communicating with other daemons 
 *It offers various docker objects such images,containers,networking&storage

• Docker Client: It is a command line interface tool that allows user to 
interact with Docker Daemon 
 * It send commands to Docker Daemon & receives response

• Docker Host: It provides environment to execute and run the application
 * It contains docker daemon,images,containers,networks & storage

• Docker Registry: It manages and stores the Docker images
 * 2 types of Docker Registry are
1) Public Registry: Docker hub
2) Private Registry: Images share within enterprise

• Docker Network: Docker provides build in network infrastructure that 
allows containers to communicate with each other & with the host machine.
 * It can be created and configured using docker command line interface 
(CLI) or Docker compose

• Docker Image: It is a read only template that contain set of instructions for 
creating docker container

• Docker Container: It is a Run time environment to images with updating 
all its dependencies to run applications

DOCKER COMMANDS
$ docker version : To check detailed docker version
$ docker –v : To check short-info docker version
$ docker search imagename : To search image name
Ex: docker search nginx
$ docker pull imagename: To pull image from dockerhub
ex docker pull nginx
$ docker images: To list images 
$ docker run –it - -name newcontainer imagename : To enter inside container
Ex : docker run –it - -name mycont nginx
ctrl+p+ctrl+q : exit container without stopping
$ docker ps : To check runnung container
$ docker run –it imagename: To go inside container with its random container 
name
Ex : docker run –it nginx, 
 exit : after by entering inside container to exit & container stops automatically
$ docker ps –a : To list Running and stopped container
$ docker attach runcontainername: To go inside running container name
$ docker stop containername: To stop running container
$ docker kill containername :- To stop container suddenly
$ docker rm containername: To delete stopped container
$ docker start containername: To start container
$ docker rmi imagename: To delete image name
$ docker run –t –d - -name newcontainername imagename: To run the 
container in detached mode means that without entering inside container.(if we try 
to docker attach containername to go inside it freezed due to it runs in detached 
mode)
$ docker exec –it containername /bin/bash : To enter inside container of 
detached mode
$ docker diff containername : To see any updates or logs in the image
 Output shows: C-changed
 A-appended(add)
 D-Deleted
$ docker commit runcontainername newimagename: To create new image from 
running container
$ docker stop container1 container2 containeretc: To stop multiple container

CREATE AND BUILD DOCKER
Dockerfile is basically a text file. It contains some set of instructions. 
Automation of docker image creation.

Dockerfile components:
FROM: for base image, this command must be on the top of the dockerfile.
WORKDIR: Specify the working directory inside the container.
RUN: to execute commands, it will create a layer in image
MAINTAINER: author/ owner/ description
COPY: copy files from local system (docker vm) we need to provide source, 
destination (we can’t download file from internet and any remote repo.)
ADD: similar to copy but it provides a feature to download files from internet, also 
extract file at docker image side.
EXPOSE: to expose ports such as port 8080 for tomcat , port 80 for nginx etc.
CMD: execute commands but during container creation.
ENTRYPOINT: similar to CMD but has higher priority over CMD, first 
commands will be executed by ENTRYPOINT only.
ENV: environment variables

Create a file named Dockerfile
Add instructions in Dockerfile
Build dockerfile to create image
Run image to create container
